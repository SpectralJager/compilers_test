<ProgramAST>
	<Name>parse global variable</Name>
	<Path></Path>
	<Body>
		<Symbol>
			<Primary>alpha</Primary>
		</Symbol>
		<Type>
			<T></T>
		</Type>
		<Expression>
			<Value>12</Value>
		</Expression>
	</Body>
	<Body>
		<Symbol>
			<Primary>beta12</Primary>
		</Symbol>
		<Type>
			<T></T>
		</Type>
		<Expression>
			<Value>12</Value>
		</Expression>
	</Body>
	<Body>
		<Symbol>
			<Primary>tetha_12</Primary>
		</Symbol>
		<Type>
			<T></T>
		</Type>
		<Expression>
			<Value>12</Value>
		</Expression>
	</Body>
	<Body>
		<Symbol>
			<Primary>lupin</Primary>
		</Symbol>
		<Type>
			<T></T>
		</Type>
		<Expression>
			<Function>
				<Primary>int</Primary>
				<Additional>
					<Primary>add</Primary>
				</Additional>
			</Function>
			<Arguments>
				<Primary>alpha</Primary>
			</Arguments>
			<Arguments>
				<Primary>beta12</Primary>
			</Arguments>
			<Arguments>
				<Value>12</Value>
			</Arguments>
		</Expression>
	</Body>
</ProgramAST>
<ProgramAST>
	<Name>parse functions</Name>
	<Path></Path>
	<Body>
		<Symbol>
			<Primary>main</Primary>
		</Symbol>
		<Body>
			<Function>
				<Primary>int</Primary>
				<Additional>
					<Primary>add</Primary>
				</Additional>
			</Function>
			<Arguments>
				<Value>12</Value>
			</Arguments>
			<Arguments>
				<Value>10</Value>
			</Arguments>
		</Body>
		<Body>
			<Function>
				<Primary>int</Primary>
				<Additional>
					<Primary>sub</Primary>
				</Additional>
			</Function>
			<Arguments>
				<Value>50</Value>
			</Arguments>
			<Arguments>
				<Function>
					<Primary>func</Primary>
				</Function>
				<Arguments>
					<Value>10</Value>
				</Arguments>
			</Arguments>
		</Body>
	</Body>
	<Body>
		<Symbol>
			<Primary>func</Primary>
		</Symbol>
		<Args>
			<Symbol>
				<Primary>a</Primary>
			</Symbol>
			<Type>
				<T></T>
			</Type>
		</Args>
		<ReturnTypes>
			<T></T>
		</ReturnTypes>
		<Body>
			<Value>
				<Function>
					<Primary>int</Primary>
					<Additional>
						<Primary>add</Primary>
					</Additional>
				</Function>
				<Arguments>
					<Value>12</Value>
				</Arguments>
				<Arguments>
					<Value>10</Value>
				</Arguments>
				<Arguments>
					<Primary>a</Primary>
				</Arguments>
			</Value>
		</Body>
	</Body>
</ProgramAST>
<ProgramAST>
	<Name>parse fib prog</Name>
	<Path></Path>
	<Body>
		<Symbol>
			<Primary>n</Primary>
		</Symbol>
		<Type>
			<T></T>
		</Type>
		<Expression>
			<Value>40</Value>
		</Expression>
	</Body>
	<Body>
		<Symbol>
			<Primary>fib</Primary>
		</Symbol>
		<Args>
			<Symbol>
				<Primary>n</Primary>
			</Symbol>
			<Type>
				<T></T>
			</Type>
		</Args>
		<ReturnTypes>
			<T></T>
		</ReturnTypes>
		<Body>
			<IfCondition>
				<Function>
					<Primary>int</Primary>
					<Additional>
						<Primary>lt</Primary>
					</Additional>
				</Function>
				<Arguments>
					<Primary>n</Primary>
				</Arguments>
				<Arguments>
					<Value>2</Value>
				</Arguments>
			</IfCondition>
			<IfBody>
				<Value>
					<Primary>n</Primary>
				</Value>
			</IfBody>
		</Body>
		<Body>
			<Value>
				<Function>
					<Primary>fib</Primary>
				</Function>
				<Arguments>
					<Function>
						<Primary>int</Primary>
						<Additional>
							<Primary>add</Primary>
						</Additional>
					</Function>
					<Arguments>
						<Function>
							<Primary>int</Primary>
							<Additional>
								<Primary>sub</Primary>
							</Additional>
						</Function>
						<Arguments>
							<Primary>n</Primary>
						</Arguments>
						<Arguments>
							<Value>1</Value>
						</Arguments>
					</Arguments>
					<Arguments>
						<Function>
							<Primary>int</Primary>
							<Additional>
								<Primary>sub</Primary>
							</Additional>
						</Function>
						<Arguments>
							<Primary>n</Primary>
						</Arguments>
						<Arguments>
							<Value>2</Value>
						</Arguments>
					</Arguments>
				</Arguments>
			</Value>
		</Body>
	</Body>
	<Body>
		<Symbol>
			<Primary>main</Primary>
		</Symbol>
		<Body>
			<Symbol>
				<Primary>res</Primary>
			</Symbol>
			<Type>
				<T></T>
			</Type>
			<Expression>
				<Function>
					<Primary>fib</Primary>
				</Function>
				<Arguments>
					<Primary>n</Primary>
				</Arguments>
			</Expression>
		</Body>
		<Body>
			<Function>
				<Primary>println</Primary>
			</Function>
			<Arguments>
				<Primary>res</Primary>
			</Arguments>
		</Body>
	</Body>
</ProgramAST>
